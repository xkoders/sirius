"use strict";(self.webpackChunk_adersolutions_sirius_docs=self.webpackChunk_adersolutions_sirius_docs||[]).push([[5723],{7031:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"components/feedbacks/spinner","title":"Spinner","description":"A loading spinner component for indicating asynchronous operations and loading states.","source":"@site/docs/components/feedbacks/spinner.md","sourceDirName":"components/feedbacks","slug":"/components/feedbacks/spinner","permalink":"/docs/components/feedbacks/spinner","draft":false,"unlisted":false,"editUrl":"https://github.com/adersolutions/sirius-ui/tree/main/docs/docs/components/feedbacks/spinner.md","tags":[],"version":"current","frontMatter":{"id":"spinner","title":"Spinner","sidebar_label":"Spinner"}}');var t=s(6106),r=s(9185);const a={id:"spinner",title:"Spinner",sidebar_label:"Spinner"},l="Spinner",d={},c=[{value:"\ud83d\udcd6 Overview",id:"-overview",level:2},{value:"\ud83d\ude80 Basic Usage",id:"-basic-usage",level:2},{value:"React",id:"react",level:3},{value:"Vue",id:"vue",level:3},{value:"\ud83c\udfa8 Variants",id:"-variants",level:2},{value:"Default Spinner",id:"default-spinner",level:3},{value:"Small Spinner",id:"small-spinner",level:3},{value:"Medium Spinner",id:"medium-spinner",level:3},{value:"Large Spinner",id:"large-spinner",level:3},{value:"Custom Size",id:"custom-size",level:3},{value:"\ud83d\udd27 Props",id:"-props",level:2},{value:"\ud83c\udfaf Examples",id:"-examples",level:2},{value:"Button with Loading State",id:"button-with-loading-state",level:3},{value:"Form Loading State",id:"form-loading-state",level:3},{value:"Page Loading State",id:"page-loading-state",level:3},{value:"Inline Loading",id:"inline-loading",level:3},{value:"\ud83c\udfa8 CSS Classes",id:"-css-classes",level:2},{value:"Size Classes",id:"size-classes",level:3},{value:"Custom Styling",id:"custom-styling",level:3},{value:"\u267f Accessibility",id:"-accessibility",level:2},{value:"ARIA Attributes",id:"aria-attributes",level:3},{value:"\ud83e\uddea Testing",id:"-testing",level:2},{value:"\ud83d\udd17 Related Components",id:"-related-components",level:2}];function o(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"spinner",children:"Spinner"})}),"\n",(0,t.jsx)(e.p,{children:"A loading spinner component for indicating asynchronous operations and loading states."}),"\n",(0,t.jsx)(e.h2,{id:"-overview",children:"\ud83d\udcd6 Overview"}),"\n",(0,t.jsx)(e.p,{children:"The Spinner component provides visual feedback during loading operations. It's commonly used in buttons, forms, and other interactive elements to show that an action is in progress."}),"\n",(0,t.jsx)(e.h2,{id:"-basic-usage",children:"\ud83d\ude80 Basic Usage"}),"\n",(0,t.jsx)(e.h3,{id:"react",children:"React"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-tsx",children:"import { Spinner } from '@adersolutions/sirius-react';\n\nfunction MyComponent() {\n  return (\n    <div>\n      <Spinner />\n      Loading...\n    </div>\n  );\n}\n"})}),"\n",(0,t.jsx)(e.h3,{id:"vue",children:"Vue"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-vue",children:'<template>\n  <div>\n    <div class="spinner"></div>\n    Loading...\n  </div>\n</template>\n\n<script setup>\n// Spinner component will be available in future Vue package updates\n<\/script>\n'})}),"\n",(0,t.jsx)(e.h2,{id:"-variants",children:"\ud83c\udfa8 Variants"}),"\n",(0,t.jsx)(e.h3,{id:"default-spinner",children:"Default Spinner"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-tsx",children:"<Spinner />\n"})}),"\n",(0,t.jsx)(e.h3,{id:"small-spinner",children:"Small Spinner"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-tsx",children:'<Spinner size="small" />\n'})}),"\n",(0,t.jsx)(e.h3,{id:"medium-spinner",children:"Medium Spinner"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-tsx",children:'<Spinner size="medium" />\n'})}),"\n",(0,t.jsx)(e.h3,{id:"large-spinner",children:"Large Spinner"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-tsx",children:'<Spinner size="large" />\n'})}),"\n",(0,t.jsx)(e.h3,{id:"custom-size",children:"Custom Size"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-tsx",children:'<Spinner size="none" className="w-8 h-8" />\n'})}),"\n",(0,t.jsx)(e.h2,{id:"-props",children:"\ud83d\udd27 Props"}),"\n",(0,t.jsxs)(e.table,{children:[(0,t.jsx)(e.thead,{children:(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.th,{children:"Prop"}),(0,t.jsx)(e.th,{children:"Type"}),(0,t.jsx)(e.th,{children:"Default"}),(0,t.jsx)(e.th,{children:"Description"})]})}),(0,t.jsxs)(e.tbody,{children:[(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"size"})}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"'small' | 'medium' | 'large' | 'none'"})}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"'medium'"})}),(0,t.jsx)(e.td,{children:"Size of the spinner"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"className"})}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"string"})}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"undefined"})}),(0,t.jsx)(e.td,{children:"Additional CSS classes"})]})]})]}),"\n",(0,t.jsx)(e.h2,{id:"-examples",children:"\ud83c\udfaf Examples"}),"\n",(0,t.jsx)(e.h3,{id:"button-with-loading-state",children:"Button with Loading State"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-tsx",children:"import { Button, Spinner } from '@adersolutions/sirius-react';\n\nfunction LoadingButton() {\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleClick = async () => {\n    setIsLoading(true);\n    try {\n      await performAction();\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <Button \n      onClick={handleClick} \n      disabled={isLoading}\n      icon={isLoading ? <Spinner size=\"small\" /> : undefined}\n    >\n      {isLoading ? 'Loading...' : 'Click Me'}\n    </Button>\n  );\n}\n"})}),"\n",(0,t.jsx)(e.h3,{id:"form-loading-state",children:"Form Loading State"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-tsx",children:'function FormWithSpinner() {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    \n    try {\n      await submitForm();\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {/* Form fields */}\n      <button \n        type="submit" \n        disabled={isSubmitting}\n        className="flex items-center gap-2"\n      >\n        {isSubmitting && <Spinner size="small" />}\n        {isSubmitting ? \'Submitting...\' : \'Submit\'}\n      </button>\n    </form>\n  );\n}\n'})}),"\n",(0,t.jsx)(e.h3,{id:"page-loading-state",children:"Page Loading State"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-tsx",children:'function PageWithSpinner() {\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const loadData = async () => {\n      await fetchData();\n      setIsLoading(false);\n    };\n    loadData();\n  }, []);\n\n  if (isLoading) {\n    return (\n      <div className="flex items-center justify-center min-h-screen">\n        <div className="text-center">\n          <Spinner size="large" />\n          <p className="mt-4 text-gray-600">Loading page...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return <div>Page content loaded!</div>;\n}\n'})}),"\n",(0,t.jsx)(e.h3,{id:"inline-loading",children:"Inline Loading"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-tsx",children:'function InlineSpinner() {\n  return (\n    <div className="flex items-center gap-2">\n      <span>Processing</span>\n      <Spinner size="small" />\n    </div>\n  );\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"-css-classes",children:"\ud83c\udfa8 CSS Classes"}),"\n",(0,t.jsx)(e.p,{children:"The Spinner component uses the following CSS classes:"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:".sirius-spinner"})," - Base spinner class"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:".sirius-spinner--{size}"})," - Size-specific styles"]}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"size-classes",children:"Size Classes"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-css",children:"/* Small */\n.sirius-spinner--small { width: 16px; height: 16px; }\n\n/* Medium */\n.sirius-spinner--medium { width: 20px; height: 20px; }\n\n/* Large */\n.sirius-spinner--large { width: 24px; height: 24px; }\n"})}),"\n",(0,t.jsx)(e.h3,{id:"custom-styling",children:"Custom Styling"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-tsx",children:'function CustomSpinner() {\n  return (\n    <Spinner \n      size="none" \n      className="w-12 h-12 text-blue-500 animate-spin" \n    />\n  );\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"-accessibility",children:"\u267f Accessibility"}),"\n",(0,t.jsx)(e.p,{children:"The Spinner component includes several accessibility features:"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"ARIA Support"}),": Uses ",(0,t.jsx)(e.code,{children:'aria-hidden="true"'})," to hide from screen readers"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Semantic Meaning"}),": Indicates loading state to assistive technologies"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Focus Management"}),": Doesn't interfere with keyboard navigation"]}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"aria-attributes",children:"ARIA Attributes"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-tsx",children:'<Spinner \n  size="medium" \n  aria-hidden="true"\n  role="status"\n  aria-label="Loading"\n/>\n'})}),"\n",(0,t.jsx)(e.h2,{id:"-testing",children:"\ud83e\uddea Testing"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-tsx",children:"import { render, screen } from '@testing-library/react';\nimport { Spinner } from '@adersolutions/sirius-react';\n\ntest('renders spinner with correct size', () => {\n  render(<Spinner size=\"large\" />);\n  const spinner = screen.getByRole('status', { hidden: true });\n  expect(spinner).toHaveClass('w-6', 'h-6');\n});\n\ntest('applies custom className', () => {\n  render(<Spinner className=\"custom-spinner\" />);\n  const spinner = screen.getByRole('status', { hidden: true });\n  expect(spinner).toHaveClass('custom-spinner');\n});\n"})}),"\n",(0,t.jsx)(e.h2,{id:"-related-components",children:"\ud83d\udd17 Related Components"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:(0,t.jsx)(e.a,{href:"/docs/components/actions/button",children:"Button"})})," - Buttons with loading states"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:(0,t.jsx)(e.a,{href:"/docs/components/feedbacks/badge",children:"Badge"})})," - Status indicators"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:(0,t.jsx)(e.a,{href:"/docs/components/feedbacks/toast",children:"Toast"})})," - Loading notifications"]}),"\n"]})]})}function h(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(o,{...n})}):o(n)}},9185:(n,e,s)=>{s.d(e,{R:()=>a,x:()=>l});var i=s(7378);const t={},r=i.createContext(t);function a(n){const e=i.useContext(r);return i.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:a(n.components),i.createElement(r.Provider,{value:e},n.children)}}}]);